;;;;;; Window ;;;;;;
(defwindow topbar
          :monitor "[0]"
          :geometry (geometry :x "1px"
                              :y "3px"
                              :width "99.5%"
                              :height "4%"
                              :anchor "top center")
          :stacking "bottom"
          :exclusive "true"
          :focusable "false"
          (bar))


;; Bar ;;
(defwidget bar []
  (box  :class "body"
        :orientation "horizontal"
        :vexpand "false"
        :hexpand "false"
   (hidden)
   (left)
   (center)
   (right)))

(defwidget left [] 
    (box  :class "left"
          :orientation "horizontal"
          :halign "start"
          :vexpand "false"
          :hexpand "false"
          :space-evenly "false"
(apppower)(time)(workspaces)))

(defwidget center [] 
    (box :class "center"
         :orientation "horizontal"
         :space-evenly "false"
         :halign "center"
         :vexpand "false"
         :hexpand "false"
(music)))


(defwidget right []
(box :class "right"
         :orientation "horizontal"
         :space-evenly "false"
         :spacing 7
         :halign "end"
         :vexpand "false"
         :hexpand "false"
(tray)(vol)(bright)(battery))
)


(defwidget bright [] 
    (eventbox :onhover "eww update bright=true"
              :onhoverlost "eww update bright=false"
              :cursor "pointer"
        (box :class "bright"
             :halign "start"
             :space-evenly "false"
            (button :class "bright-icon"
                    :onclick "" bright-sym
            )
            (revealer :transition "slideleft"
                      :duration "150ms"
                      :reveal bright
            (overlay
            (scale :class "bright-slider"
                   :min 10
                   :max 937
                   :value bright-val
                   :onchange "brightnessctl set {}"
                   )
            (label  :style "color: #191724"
                    :text {round((bright-val/937)*100,0) } 
                )
)))))


(defwidget vol [] 
    (eventbox :onhover "eww update vol=true"
              :onhoverlost "eww update vol=false"
              :cursor "pointer"
        (box :class "sound"
             :halign "start"
             :hexpand "false"
             :space-evenly "false"
            (button :class "sound-icon ${sound-val != "muted" ? "on" : "muted"}"
                    :onclick "" sound-sym
            )
            (revealer :transition "slideleft"
                      :duration "150ms"
                      :reveal vol
            (overlay
            (scale :class "sound-slider on"
                   :min 0
                   :max 101
                   :value {sound-val != "muted" ? sound-val : 0}
                   :onchange "wpctl set-volume @DEFAULT_SINK@ {}%"
                   )
            (label  :style "color: #191724"
                    :text sound-val 
                )
)))))




(defwidget battery []
    (box :class "bat-body"
         :orientation "h"
         :hexpand "false"
         :valign "center" 
   (overlay 
        (progress :class "bat ${battery-status}"
              :orientation "h"
              :halign "center"
              :valign "center"
              :value battery)
        (label  
               :text {battery+"%"}
               :halign "center"
               :class "battery-text"
    )))

)


(defwidget tray [] 
        (systray :class "systray"
                 :spacing 10
                 :orientation "h"
                 :prepend-new "true"
                 :space-evenly "true"))

(defwidget music []
    (revealer :transition "slideleft"
              :reveal {position != '' ? "true" : "false"}
              :duration "200ms"
   (eventbox :onhover "eww update playerctl=true"
             :onhover "eww update playerctl=true"
             :onclick "playerctl play-pause"
             :cursor "pointer"
    (box :class "player"
         :space-evenly "false"
         (box :class "albumart"
              :orientation "h"
              :style "background-image: url('${albumart}');"
        )
        (box :class "bar-body" 
             :orientation "v"
             :space-evenly "false"
        (label :class "music-title" 
               :limit-width "25"
               :text title)
        (scale :class "musicbar"
               :orientation "h"
               :min 0
               :max {length/1000000}
               :value {position != '' ? position :"0"}
            ))))))

(defwidget apppower []

    (eventbox :onhover "eww update apppower=true"
              :onhoverlost "eww update apppower=false"
              :cursor "pointer"
        (box :orientation "horizontal"
            :space-evenly "false"
    (button :class "applauncher"
            :onclick "~/.config/eww/scripts/wofi.sh" " 󰣇 ")
     (revealer :transition "slideright"
              :reveal apppower
              :duration "200ms"
        (box  :class "powermenu"
              :orientation "horizontal"
              :space-evenly "true"
              :spacing 24
          (button :class "shutdown"
                  :tooltip "Shutdown"
                  :onclick "shutdown now" "")
          (button :class "lock"
                  :tooltip "Lock"
                  :onclick "scripts/lock.sh" "")
          (button :class "reboot"
                  :tooltip "Reboot"
                  :onclick "reboot" "")
          (button :class "exit"
                  :tooltip "Exit"
                  :onclick "killall Hyprland" "")
          (button :class "suspend"
                  :tooltip "Suspend"
                  :onclick "systemctl suspend" ""))))))

(defwidget time []
    (box     :class "tnd"
             :orientation "h"
             :spacing 15
        (box :class "time"
             :orientation "horizontal"
             :space-evenly "false"
            "󰅐 "clock)
        (box :class "date"
             :orientation "horizontal"
             :space-evenly "false"
             " "date)))

(defwidget workspaces []
    (box :orientation "h" :space-evenly false 
                          :class "workspaces" 
                          :hexpand true
                          :spacing 10
      (for ws in workspaces-list
        (button
          :vexpand "false"
          :class "workspace ${current == ws.id ? "current" : "inactive"}"
          :onclick "hyprctl dispatch workspace ${ws.index}" "${ws.icon}"))
    )
)

(defwidget hidden []
    (box :orientation "h"
         :class "hidden"
         :space-evenly "false"
         :vexpand "false"
         :hexpand "false"
         :visible "false"
         current
    )
)
